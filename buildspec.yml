version: 0.2

phases:
  #install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    #runtime-versions:
      # name: version
      # name: version
    #commands:
      # - command
      # - command
  #pre_build:
    #commands:
      # - command
      # - command
  build:
    commands:
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REPO
      - docker build -t docker-example .
      - docker tag docker-example:latest $ECR_REPO:latest
      - docker tag docker-example:latest $ECR_REPO:$CODEBUILD_BUILD_NUMBER
      - docker push $ECR_REPO:latest
      - docker push $ECR_REPO:$CODEBUILD_BUILD_NUMBER
      # - cd docker-compose
      # - docker-compose up -d
      # - curl localhost:5000
      # - echo "build from local buildspec.yml inside code repo"
      # - command
  #post_build:
    #commands:
      # - command
      # - command
#reports:
  #report-name-or-arn:
    #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
artifacts:
  files:
    - '**/*'
    # - index.html
    # - docker-compose/app.py
  name: $(date +%Y-%m-%d)
  #discard-paths: yes
  #base-directory: location
#cache:
  #paths:
    # - paths
